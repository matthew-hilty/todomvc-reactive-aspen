{ compose }                            = require '../utilities'
{ connect, onValue, plugIntoTerminus } = require '../vendor/Controller'
{ composing, mapping }                 = require('../vendor/Pando').transforms

{
  changeModeTo
  editAppState
  editMode
  endEditing
  extractNewTodo
  filteringEnter
  filteringEscape
  synchronizeDb
  removeCompletedTodos
  removeTodo
  restoreOrigTitle
  toggleAllTodos
  toggleTodo
  saveCurrentTitle 
  storeTitle
} = require './transforms'

nodes = [
  '$clear-clicks'
  '$delete-clicks'
  '$new-todo-keydowns'
  '$toggle-all-clicks'
  '$toggle-clicks'
  '$edit-blurs'
  '$edit-keydowns'
  '$edit-keydowns'
]

transforms = [
  mapping removeCompletedTodos
  mapping removeTodo
  compose [filteringEnter, (mapping extractNewTodo)]
  mapping toggleAllTodos
  mapping toggleTodo
  mapping (endEditing saveCurrentTitle)
  compose [filteringEnter,  mapping (endEditing saveCurrentTitle)]
  compose [filteringEscape, mapping (endEditing restoreOrigTitle)]
]

penultimateNodes = [
  '$todo-label-doubleclicks'
  '$hash-events'
  'dbSynchronizer'
  '$active-todos'
  '$all-todos'
  '$completed-todos'
]

penultimateTransforms = [
  mapping   editAppState
  mapping   editMode
  composing synchronizeDb
  mapping   (changeModeTo 'active')
  mapping   (changeModeTo 'all')
  mapping   (changeModeTo 'completed')
]

connect nodes, 'dbSynchronizer', ->
  transforms

plugIntoTerminus penultimateNodes, ->
  penultimateTransforms

onValue 'todo-in-edit', \capsule ->
  storeTitle (capsule.event.target.value)
